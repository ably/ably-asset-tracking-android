plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'org.jlleitschuh.gradle.ktlint'
}

// These files are optional for builds of this project.
// They need to be placed in this project's folder (e.g. by our assemble GitHub workflow).
// They should never be checked in, hence why they're also in this project's Git ignore file.
final firebaseAppDistributionPrivateKeyFile = project.file('firebase-app-distribution-private-key.json')
final signingKeyStoreFile = project.file('signing.jks')
final hasGoogleServices = project.file('google-services.json').exists()
final canDistribute = firebaseAppDistributionPrivateKeyFile.exists()

if (hasGoogleServices) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}
if (canDistribute) {
    if (!hasGoogleServices) {
        // When we configure `android.buildTypes.release.firebaseAppDistribution` then we don't want to have to supply
        // values which can already be found in google-services.json (e.g. appId).
        // Therefore, this project build insists on Google Services configuration being available if Firebase App
        // Distribution (`canDistribute`) is in the mix.
        throw new GradleException("Firebase App Distribution private key file was found but Google Services file was not found.")
    }
    apply plugin: 'com.google.firebase.appdistribution'
}

android {
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId 'com.ably.tracking.example.publisher'
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        // Required to initialize Mapbox and use MapView in the layout XML files.
        resValue "string", "mapbox_access_token", findProperty('MAPBOX_ACCESS_TOKEN') ?: ""
    }
    namespace 'com.ably.tracking.example.publisher'

    if (canDistribute) {
        if (!(signingKeyStoreFile.exists())) {
            throw new GradleException("Java KeyStore file was not found, despite the presence of a Firebase App Distribution private key file.")
        }

        signingConfigs {
            release {
                keyAlias findProperty("ANDROID_SIGNING_KEY_ALIAS")
                keyPassword findProperty("ANDROID_SIGNING_KEY_PASSWORD")
                storeFile signingKeyStoreFile
                storePassword findProperty("ANDROID_SIGNING_STORE_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            if (canDistribute) {
                firebaseAppDistribution {
                    serviceCredentialsFile = firebaseAppDistributionPrivateKeyFile.getAbsolutePath()
                }
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    implementation project(':publishing-sdk')
    implementation project(":ably-java-resume-fixes")

    implementation 'org.msgpack:msgpack-core:0.8.11'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.davidehrmann.vcdiff:vcdiff-core:0.1.1'

    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.amplifyframework:aws-storage-s3:1.4.1'
    implementation 'com.amplifyframework:aws-auth-cognito:1.4.1'
    implementation 'pub.devrel:easypermissions:3.0.0'
    // This version needs to be compatible with the "com.mapbox.navigation:core" dependency version from publishing-sdk.
    implementation 'com.mapbox.maps:android:10.10.0'

    // Add application runtime implementation dependencies required for Crashlytics.
    if (hasGoogleServices) {
        // The BoM for the Firebase platform (it specifies the versions for Firebase dependencies).
        implementation platform('com.google.firebase:firebase-bom:31.2.0')

        // Firebase dependencies, which should not specifies versions as those are provided
        // for us because we're including the BoM above.
        // see: https://firebase.google.com/docs/crashlytics/get-started?platform=android
        implementation 'com.google.firebase:firebase-crashlytics'
    }
}
